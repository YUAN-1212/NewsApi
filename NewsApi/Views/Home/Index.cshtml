@{
    ViewBag.Title = "Home Page";
}

<style>
    * {
        margin: 0;
        padding: 0;
    }

    .row {
        margin-right: 0px;
    }
</style>

<form class="modal-dialog" id="app">
    <div class="row">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-6 col-sm-6">
                    <select v-model="selectedCurrency1" class="form-control btn btn-primary" name="currency1" v-on:change="changeCurrency1">
                        <option v-for="option in options1" :value="option.currencyCode">
                            {{ option.currencyCode + '-' +  option.currencyName}}
                        </option>
                    </select>
                </div>
                <div class="col-md-6 col-sm-6">
                    <input type="text" class="form-control" v-model="rate1" v-on:blur="onBlur($event)">
                </div>
            </div>
        </div>
        <br>
        <div class="col-lg-6" style="padding-bottom: 10px;">
            <button type="button" class="btn btn-default" v-on:click="change">
                <span class="glyphicon glyphicon-sort"> 交換</span>
            </button>
        </div>
        <br />
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-6 col-sm-6">
                    <select v-if="options2" v-model="selectedCurrency2" class="form-control btn btn-primary" name="currency2" v-on:change="changeCurrency2">
                        <option v-for="option in options2" :value="option.currencyCode">
                            {{ option.currencyCode + '-' +  option.currencyName}}
                        </option>
                    </select>                   
                </div>
                <div class="col-md-6 col-sm-6">
                    <input type="text" class="form-control" v-model="rate2" disabled>
                </div>
            </div>
        </div>
    </div>


</form>


<script>

    /** Vue 3 */
    const app1 = Vue.createApp({
        data() {
            return {
                message: 'Hello Vue 3.0',
                message2: '第二個訊息',
                options1: [],
                options2: [],
                ddlCurrencyDtos:[], //匯率的資料
                selectedCurrency1: '', //用於儲存選中的幣值
                selectedCurrency2: '', //用於儲存選中的幣值
                rate1: 1, //第一個匯率
                rate2: 0, //第二個匯率
            }
        },
        mounted() {
            console.log('mounted');
            this.getData();
            this.getDDLCurrencyData();
        },
        methods: {
            getData() {
                axios
                    .post('/Home/getData', {
                        currency: 'TWD',
                    })
                    .then(response => {
                        setTimeout(() => {
                            if (response.data.result === 'success') {
                                this.$data.selectedCurrency1 = response.data.base_code;
                                this.$data.selectedCurrency2 = 'USD'; // 預設為美金

                                app1.ddlCurrencyDtos = response.data.ddlCurrencyDtos;

                                var filterEmpty = response.data.ddlCurrencyDtos.filter(function (item, index, array) {                                    
                                    return item.currencyName === 'USD';
                                }).map(function (obj) {
                                    return obj.rate;
                                });

                                this.$data.rate2 = filterEmpty;
                            }
                        }, 1000);
                    })
                    .catch(function (error) { // 请求失败处理
                        alert(error);
                        console.log(error);
                    })
            },
            /** 綁上下拉式選單 */
            getDDLCurrencyData() {
                axios
                    .post('/Home/getDDLCurrencyData', 
                        null
                    )
                    .then(response => {
                        setTimeout(() => {
                            if (response.data.length > 0) {
                                this.$data.options1 = response.data;                               
                                this.$data.options2 = response.data;
                            }
                        }, 1000);                        
                    })
                    .catch(function (error) { // 请求失败处理
                        alert(error);
                        console.log(error);
                    })
            },
            /** 第一個下拉式選單選擇別的幣別 */
            changeCurrency1() {
                app1.rate2 = 0; //第二個匯率先歸零

                // 重新取得資料
                axios
                    .post('/Home/getData', {
                        currency: app1.selectedCurrency1,
                    })
                    .then(response => {
                        setTimeout(() => {
                            if (response.data.result === 'success') {
                                this.$data.rate1 = 1; //第一個預設都是1
                                app1.ddlCurrencyDtos = response.data.ddlCurrencyDtos;

                                var filterEmpty = response.data.ddlCurrencyDtos.filter(function (item, index, array) {
                                    return item.currencyName === app1.selectedCurrency2;
                                }).map(function (obj) {
                                    return obj.rate;
                                });

                                app1.rate2 = filterEmpty;
                            }
                        }, 1000);
                    })
                    .catch(function (error) { // 请求失败处理
                        alert(error);
                        console.log(error);
                    })
            },
            /** 第二個下拉式選單選擇別的幣別 */
            changeCurrency2() {
                app1.rate2 = 0; //第二個匯率先歸零

                // 重新覆值
                var filterEmpty = app1.ddlCurrencyDtos.filter(function (item, index, array) {
                    return item.currencyName === app1.selectedCurrency2;
                }).map(function (obj) {
                    return obj.rate;
                });

                app1.rate2 = filterEmpty;
            },
            /** 按下交換，上下交換 */
            change() {
                let currency1_Pre = this.$data.selectedCurrency1; //尚未交換之前-下拉式選單1
                let currency2_Pre = this.$data.selectedCurrency2; //尚未交換之前-下拉式選單2
                let rate1_Pre = app1.rate1; //尚未交換之前-匯率1
                let rate2_Pre = app1.rate2; //尚未交換之前-匯率2

                this.$data.selectedCurrency1 = currency2_Pre;
                this.$data.selectedCurrency2 = currency1_Pre;
                this.$data.rate1 = rate2_Pre;

                // 不為1，重新呼叫後端抓資料 !
                if (this.$data.rate1 !== 1) {
                    axios
                        .post('/Home/getData', {
                            currency: app1.selectedCurrency1,
                        })
                        .then(response => {
                            setTimeout(() => {
                                if (response.data.result === 'success') {
                                    this.$data.rate1 = 1; //第一個預設都是1

                                    app1.ddlCurrencyDtos = response.data.ddlCurrencyDtos;

                                    var filterEmpty = response.data.ddlCurrencyDtos.filter(function (item, index, array) {
                                        return item.currencyName === app1.selectedCurrency2;
                                    }).map(function (obj) {
                                        return obj.rate;
                                    });

                                    app1.rate2 = filterEmpty;
                                }
                            }, 1000);
                        })
                        .catch(function (error) { // 请求失败处理
                            alert(error);
                            console.log(error);
                        })
                }                
            },
            /** 第一個匯率的Blur事件，需要重新計算幣值 */
            onBlur(e) {
                let item = e.target.value;

                var filterEmpty = app1.ddlCurrencyDtos.filter(function (item, index, array) {
                    return item.currencyName === app1.selectedCurrency2;
                }).map(function (obj) {
                    return obj.rate;
                });

                app1.rate2 = filterEmpty * item;
            },
        },
    }).mount('#app')
</script>